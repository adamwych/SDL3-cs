name: "build+deploy"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SDK_VERSION: 6.0.x

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_run:
    workflows: ["pr"]
    types:
      - completed

jobs:

  check-in-progress-job:
    name: "Update workflow_run check: in progress"
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
    steps:

      - name: "Update check"
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          sha: ${{ github.event.workflow_run.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "build+deploy"
          status: in_progress

  native-job:
    name: "Native libraries: ${{ matrix.platform.rid }}"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows (x64), os: windows-latest, rid: win-x64 }
          - { name: macOS (x64 + arm64), os: macos-latest, rid: osx }
          - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
    steps:

      - name: "Clone Git repository"
        uses: actions/checkout@master
        with:
          submodules: "recursive"
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: "Set up MSYS2"
        if: ${{ startsWith(matrix.platform.rid, 'win') }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.platform.msystem }}
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config

      - name: "Build native libraries (Windows)"
        if: ${{ startsWith(matrix.platform.rid, 'win') }}
        shell: msys2 {0}
        run: ./library.sh

      - name: "Build native libraries (Unix)"
        if: ${{ !(startsWith(matrix.platform.rid, 'win')) }}
        shell: bash
        run: ./library.sh

      - name: "Upload native libraries"
        uses: actions/upload-artifact@v2
        with:
          name: "native-libraries-${{ matrix.platform.rid }}"
          path: "./lib"

  dotnet-job:
    name: ".NET"
    needs: [native-job]
    runs-on: ubuntu-latest
    steps:

      - name: "Download native libraries (win-x64)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-win-x64"
          path: "./lib"
      - name: "Download native libraries (osx)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-osx"
          path: "./lib"
      - name: "Download native libraries (linux-x64)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-linux-x64"
          path: "./lib"
      - uses: bottlenoselabs/github-actions-dotnet@v1
        with:
          repository: '${{ github.repository }}'
          ref: ${{ github.event.workflow_run.head_sha }}
          dotnet-sdk-version: '6.0.x'
          is-enabled-pack: 'true'
          publish-environment: 'staging'
          myget-access-token: '${{ secrets.MYGET_ACCESS_TOKEN }}'
          nuget-access-token: '${{ secrets.NUGET_ACCESS_TOKEN }}'

  check-complete-job:
    name: "Update workflow_run check: complete"
    needs: [check-in-progress-job, native-job, dotnet-job]
    runs-on: ubuntu-latest
    if: always()
    steps:

      - name: "Update check"
        uses: LouisBrunner/checks-action@v1.1.1
        if: github.event_name == 'workflow_run'
        with:
          sha: ${{ github.event.workflow_run.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "build+deploy"
          status: completed
          conclusion: ${{ job.status }}
