name: "sdl"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SDK_VERSION: 5.0.301

on:
  push:
    branches: [develop]
    paths-ignore: ['**/*.md']

jobs:

  bindgen-job:
    name: "${{ matrix.platform.rid }}"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: windows-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64), os: macos-latest, rid: osx-x64 }
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        submodules: true

    - name: "Bindgen (Unix)"
      if: ${{ matrix.platform.rid }} == 'linux-x64'
      shell: bash
      run: ./bindgen.sh

    - name: "Add + commit + push (if necessary)"
      uses: EndBug/add-and-commit@v7
      with:
        default_author: user_info
        message: "Update bindings (${{ matrix.platform.rid }})"

    - name: "Build native library: Windows"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: pwsh
      run: .\library.cmd

    - name: "Build native lirbary: Unix"
      if: ${{ !startsWith(matrix.platform.rid, 'win') }}
      shell: bash
      run: ./library.sh

    - name: "Upload"
      uses: actions/upload-artifact@v2
      with:
        name: native-libraries-${{ matrix.platform.rid }}
        path: ${{ github.workspace }}/lib/

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ env.DOTNET_SDK_VERSION }}'

    - name: "Build .NET solution"
      run: dotnet build  --nologo --verbosity minimal --configuration Release

